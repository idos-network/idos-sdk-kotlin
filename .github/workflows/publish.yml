name: Publish

on:
  workflow_call:
    secrets:
      MAVEN_CENTRAL_USERNAME:
        required: true
      MAVEN_CENTRAL_PASSWORD:
        required: true
      SIGNING_KEY:
        required: true
      SIGNING_PASSWORD:
        required: true

jobs:
  publish:
    name: Publish Artifacts
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history needed for git-versioning plugin to find tags

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          cache-read-only: false

      - name: Download Android AAR artifacts
        uses: actions/download-artifact@v4
        with:
          name: android-release-aar
          path: shared/build/outputs/aar/

      - name: Download iOS XCFramework artifacts
        uses: actions/download-artifact@v4
        with:
          name: ios-release-xcframework
          path: shared/build/XCFrameworks/release/idos_sdk.xcframework/

      - name: Publish to Maven Central
        env:
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.SIGNING_KEY }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.SIGNING_PASSWORD }}
        run: |
          ./gradlew publishAndReleaseToMavenCentral --no-configuration-cache --stacktrace --no-daemon

      - name: Zip iOS XCFramework for distribution
        run: |
          cd shared/build/XCFrameworks/release
          zip -r idos_sdk.xcframework.zip idos_sdk.xcframework
          shasum -a 256 idos_sdk.xcframework.zip > idos_sdk.xcframework.zip.sha256

      - name: Update Package.swift with new version and checksum, then move tag
        run: |
          CHECKSUM=$(cat shared/build/XCFrameworks/release/idos_sdk.xcframework.zip.sha256 | awk '{print $1}')
          VERSION=$(./gradlew properties --no-configuration-cache | grep "^version:" | awk '{print $2}')
          TAG_NAME=${GITHUB_REF#refs/tags/}

          # Configure git
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # We're already on the tag (detached HEAD) from checkout
          # Update Package.swift with new version and checksum
          sed -i.bak "s/let version = \".*\"/let version = \"$VERSION\"/" Package.swift
          sed -i.bak "s/checksum: \".*\"/checksum: \"$CHECKSUM\"/" Package.swift
          rm Package.swift.bak
          git add Package.swift
          git commit -m "Update Package.swift version $VERSION and checksum [skip ci]"

          # Delete the old tag remotely
          git push origin :refs/tags/$TAG_NAME

          # Create new tag at the current commit (with updated Package.swift)
          git tag -f $TAG_NAME

          # Push the new tag (no branch push needed - avoids conflicts)
          git push origin $TAG_NAME

      - name: Create GitHub Release with all artifacts
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          files: |
            shared/build/outputs/aar/*.aar
            shared/build/XCFrameworks/release/idos_sdk.xcframework.zip
            shared/build/XCFrameworks/release/idos_sdk.xcframework.zip.sha256
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
