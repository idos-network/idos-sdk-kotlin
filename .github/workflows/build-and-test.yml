name: Build and Test

on:
  workflow_call:
    inputs:
      upload-artifacts:
        description: 'Whether to upload build artifacts'
        required: false
        type: boolean
        default: false
    secrets:
      MNEMONIC_WORDS:
        required: false
      PASSWORD:
        required: false

jobs:
  build-and-test:
    name: Build and Test All Platforms
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history needed for git-versioning plugin to find tags

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v2

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          cache-read-only: false

      - name: Lint (ktlint + detekt)
        run: ./gradlew ktlintCheck detekt --stacktrace --no-daemon --no-configuration-cache

      - name: Create .env for tests from GitHub Secrets
        shell: bash
        env:
          MNEMONIC_WORDS: ${{ secrets.MNEMONIC_WORDS }}
          PASSWORD: ${{ secrets.PASSWORD }}
        run: |
          # Write .env used by dotenv-kotlin in tests. Values come from repository secrets.
          cat > .env <<EOF
          MNEMONIC_WORDS=$MNEMONIC_WORDS
          PASSWORD=$PASSWORD
          EOF
          echo ".env created with test credentials"

      - name: Run all platform tests
        run: ./gradlew allTests --stacktrace --no-daemon --no-configuration-cache

      - name: Publish Test Report
        if: always()
        uses: mikepenz/action-junit-report@v4
        with:
          report_paths: '**/test-results/**/TEST-*.xml'
          require_tests: false

      - name: Upload lint reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: lint-reports
          path: |
            **/build/reports/detekt/*.html
            **/build/reports/detekt/*.xml
            **/build/reports/ktlint/*.xml
          if-no-files-found: ignore

      - name: Build Android Release AAR
        run: ./gradlew :shared:assembleRelease --stacktrace --no-daemon --no-configuration-cache

      - name: Build iOS XCFramework
        run: ./gradlew :shared:assembleIdos_sdkXCFramework --stacktrace --no-daemon --no-configuration-cache

      - name: Zip iOS XCFramework
        working-directory: shared/build/XCFrameworks/release
        run: |
          zip -r idos_sdk.xcframework.zip idos_sdk.xcframework
          shasum -a 256 idos_sdk.xcframework.zip | awk '{print $1}' > idos_sdk.xcframework.zip.sha256

      - name: Upload Android AAR artifacts
        if: ${{ inputs.upload-artifacts }}
        uses: actions/upload-artifact@v4
        with:
          name: android-release-aar
          path: shared/build/outputs/aar/*.aar
          if-no-files-found: error

      - name: Upload iOS XCFramework artifacts
        if: ${{ inputs.upload-artifacts }}
        uses: actions/upload-artifact@v4
        with:
          name: ios-xcframework
          path: |
            shared/build/XCFrameworks/release/idos_sdk.xcframework.zip
            shared/build/XCFrameworks/release/idos_sdk.xcframework.zip.sha256
          if-no-files-found: error
